{"version":3,"sources":["js/tasks.js"],"names":["View","Data","template","Marionette","extend","triggers","onRender","RegionSetter","getRegion","this","show","Tasks","Model","Backbone","author","Collection","url","templateContext","state","stateName","highlighted","model","id","onBeforeRender","addClass","$el","initialize","RouteCollection","onAdd","click [data-action=\"remove\"]","toggleClass","onRemove","app","taskRouteCollection","add","find","remove","rootView","module_notify","length","EntryRoute","Entry","CollectionView","options","childView","Task","className","collection","fetch","render","_this","window"],"mappings":"CAAC,WAED,GAAAA,GAAIA,MACJC,EAAIA,KAKHC,GAAAA,MAAUC,WADyBH,KAAAI,QAEnCC,SAAAA,aACCA,YAGDC,QAAAA,GAAUC,cAAA,SACTD,SAAKE,WACLC,KAAAD,UAAA,SAAAE,KAAA,GAAAV,GAAAW,UAcAV,EAAAW,MAAOC,SAAAD,MAAAR,QACNU,SAAAA,WADM,OAGPA,OAAA,YAE2Cb,EAA7Cc,WAAAF,SAAAE,WAAAX,QACCY,IAAK,0BAKLd,EAAAA,KAAUC,WAFwBH,KAAAI,QAGlCa,UAAAA,OACCf,SAAO,QACNgB,gBAAO,WACPC,OACAC,MAAAA,UAHMD,UAAP,QAJiCC,YAAAX,KAAAY,MAAAC,GAAA,GAAA,IAYhCC,eAASC,WACTf,KAAAY,MAAAC,GAAA,GAAA,GAbgCb,KAAAgB,IAAAD,SAAA,gBAkBjCE,WAlBiC,WAmBlCrB,IAAAA,oBAAU,GAAAJ,GAAA0B,iBAAAtB,UAIVuB,4BAAkB,MACjBC,+BAAgCC,UAEhCF,MA1BiC,WA2BlCG,KAAAA,IAAAA,KAAU,kBAAWD,YAAA,QACpBE,IAAAC,oBAAcC,IAAAzB,KAAkBqB,QAEhCC,SAAA,WA9BUtB,KAAZgB,IAAAU,KAAA,kBAAAL,YAAA,QA6BEE,IAAIC,oBAAoBG,OAAO3B,KAAKY,UAOnCgB,EAAAA,gBAAmBxB,SAAnBE,WAAsCuB,QACtCZ,WAASa,WACRF,KAAAA,GAAAA,SAAS7B,WACT6B,SAAA7B,UAAA,UAAAE,KAAA,GAAA4B,eAAAtC,KAAAwC,YAJF,GAAA/B,KAAA8B,QAMAF,SAAA7B,UAAA,UAAAE,KAAA,GAAA4B,eAAAtC,KAAAyC,YAMDf,EAAAA,MAAAA,WAAYgB,eAASC,QAASC,UAAA5C,EAAA6C,KAD9BC,UAAW,QAEVpB,WAAKqB,SAAaJ,GAAS5B,GAAAA,GAAAA,IAC3BN,MAAAsC,WAAgBC,GAAhB/C,GAAAc,WACAN,KAAAsC,WAAAC,QAA2BvC,KAAAsC,WAAmBE,GAAAA,OAAnB,SAAAF,GAAA,MAAAG,GAAAD,cAM7BE,OAAAA,cACCnD,KAAAA,EACAC,KAAAA,EACAwC,MAAAA,EAAOzC","file":"tasks.js","sourcesContent":["(function(){\r\n\t\r\nvar View = View || {};\r\nvar Data = Data || {};\r\nvar Behaviors = Behaviors || {};\r\n\r\n\r\nView.Entry = Marionette.View.extend({\r\n\ttemplate: '#TaskEntry',\r\n\ttriggers: {\r\n\t\t// 'click' : 'show:popup'\r\n\t},\r\n\tregions: new RegionSetter('tasks'),\r\n\tonRender: function() {\r\n\t\tthis.getRegion('tasks').show(new View.Tasks());\r\n\t}\r\n\t// onShowPopup: function() {\r\n\t// \tvar options = {\r\n\t// \t\ttitle: 'My actions',\r\n\t// \t\tcontent: new module_user.View.Actions(),\r\n\t// \t};\r\n\t// \tvar popup = new Popup(options);\r\n\t// \trootView.getRegion('popup').show(popup)\r\n\t// },\r\n});\r\n\r\n\r\nData.Model = Backbone.Model.extend({\r\n\tdefaults: function() {\r\n\t\treturn {\r\n\t\t\tauthor: 'Billy'\r\n\t\t}\r\n\t}\r\n});\r\nData.Collection = Backbone.Collection.extend({\r\n\turl: '/back/index.php/tasks',\r\n});\r\n\r\nView.Task = Marionette.View.extend({\r\n\tclassName: 'task',\r\n\ttemplate: '#Task',\r\n\ttemplateContext: function() {\r\n\t\treturn {\r\n\t\t\tstate: 'default',\r\n\t\t\tstateName: 'clean',\r\n\t\t\thighlighted: this.model.id % 3 == 1,\r\n\t\t}\r\n\t},\r\n\tonBeforeRender: function() {\r\n\t\tif (this.model.id % 3 == 1) {\r\n\t\t\tthis.$el.addClass('highlighted');\r\n\t\t}\r\n\t},\r\n\tinitialize: function() {\r\n\t\tapp.taskRouteCollection = new Data.RouteCollection();\r\n\t\t\r\n\t},\r\n\ttriggers: {\r\n\t\t'click [data-action=\"add\"]' : 'add',\r\n\t\t'click [data-action=\"remove\"]' : 'remove'\r\n\t},\r\n\tonAdd: function() {\r\n\t\tthis.$el.find('.actions > div').toggleClass('hide');\r\n\t\tapp.taskRouteCollection.add(this.model);\r\n\t},\r\n\tonRemove: function() {\r\n\t\tthis.$el.find('.actions > div').toggleClass('hide');\r\n\t\tapp.taskRouteCollection.remove(this.model);\r\n\t}\r\n});\r\n\r\nData.RouteCollection = Backbone.Collection.extend({\r\n\tinitialize: function() {\r\n\t\tthis.on('update', function(){\r\n\t\t\trootView.getRegion('notify').show(new module_notify.View.EntryRoute());\r\n\t\t\tif (this.length == 0) {\r\n\t\t\t\trootView.getRegion('notify').show(new module_notify.View.Entry());\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n});\r\n\r\nView.Tasks = Marionette.CollectionView.extend({\r\n\tchildView: View.Task,\r\n\tclassName: 'tasks',\r\n\tinitialize: function(options) {\r\n\t\tthis.collection = new Data.Collection();\r\n\t\tthis.collection.fetch();\r\n\t\tthis.collection.on('sync', collection => this.render()); \r\n\t},\r\n\r\n})\r\n\r\n\r\nwindow.module_tasks = {\r\n\tView: View,\r\n\tData: Data,\r\n\tEntry: View.Entry,\r\n}\r\n\r\n}());"]}